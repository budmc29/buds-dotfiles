# set Ctrl Space as prefix
set -g prefix C-Space
set -sg escape-time 0

# restore previous session when tmux starts
set -g @continuum-restore 'on'

# improve colors
set -g default-terminal "screen-256color"

# soften status bar color from harsh green to light gray
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'

# increase scrollback buffer size
set -g history-limit 100000

# focus events enabled for terminals that support them
set -g focus-events on

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# alert when something happened in another window
setw -g monitor-activity on
set -g visual-activity on

# Vim visual selection and yank when in copy mode
bind Space copy-mode
bind C-Space copy-mode
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel

# After we have something yanked back in Vim we can paste our yanked selection
# anywhere we are in insert mode with (prefix p). This works in the vim buffer,
# search and fuzzy finder buffer for example
bind p paste-buffer

# set vi mode in console
set-window-option -g mode-keys vi

# activate mouse mode in tmux
set -g mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# allow terminal scrolling
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# use vi mode
setw -g mode-keys vi
set -g status-keys vi
setw -g utf8 on

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# don't rename windows automatically
set-option -g allow-rename off

#### statusbar ####
set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left '#[fg=green] #H #[default]'
set -g status-right '#[fg=blue,bright]Up#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",")'
set -g status-right "#[fg=blue]#S #I:#P"
#[default]:: #[fg=cyan]#(cut -d " " -f 1-4 /proc/loadavg) '

# default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr bright

# tmux theme
set -g @plugin 'seebi/tmux-colors-solarized'
set -g @colors-solarized 'dark'

# save sessions plugins
set -g @plugin 'tmux-plugins/tmux-resurrect'
# restore all opened programs in tmux
# disabled because it's dangerous, TODO: allow only rails processes besides vim
# set -g @resurrect-processes ':all:'

# restore pane contents
set -g @resurrect-capture-pane-contents 'on'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sessionist'

# open predefined sessions easily
bind-key o attach-session -t console
bind-key a attach-session -t account
bind-key b attach-session -t bootstrap
bind-key m attach-session -t marketplace
bind-key p attach-session -t player
bind-key w attach-session -t wiki
bind-key r attach-session -t projects
bind-key i attach-session -t irc

# copy text from terminal to clipboard
set -g @plugin 'tmux-plugins/tmux-yank'

# save vim sessions using tpose's obsession
set -g @resurrect-strategy-vim 'session'

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# reload config without killing server
bind R source-file ~/.tmux.conf \; display-message " Config reloaded..."

run '~/.tmux/plugins/tpm/tpm'
